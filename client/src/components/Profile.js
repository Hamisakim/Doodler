import '../styles/componentStyles/profile.scss'

import React, { useState, useEffect } from 'react'
import { useParams, Link, useLocation } from 'react-router-dom' //, useHistory 
import axios from 'axios'
// import ArtCard from './ArtCard'
import { userIsOwner } from '../helpers/authHelp' // getTokenFromLocalStorage,
import LZString from 'lz-string'
import profile from '../assets/Profile.png'
// import ProfileForm from '../components/userStuff/ProfileForm'
import CanvasDraw from '../drawing/index'

//______________________________________________________________________________________

const Profile = () => {   //{ username } 
  const [user, setUser] = useState(null)
  const [allArtwork, setAllArtwork] = useState(null)
  const [userArtwork, setUserArtwork] = useState(null)
  const id = { userArtwork }
  console.log('üêù ~ file: Profile.js ~ line 17 ~ id', id)
  // const [formData, setFormData] = useState({
  //   bio: ''
  // })
  
  const params = useParams()
  // const history = useHistory()
  const location = useLocation()

  console.log('üêù ~ file: Profile.js ~ line 23 ~ userArtwork', userArtwork)


  useEffect(() => {
    getSingleUser()
    console.log('user ->', user)
    getAllArtwork()
  }, [location.pathname])

  const getSingleUser =  async () => {
    const response = await axios.get(`/api/users/${params.id}`)
    setUser(response.data)
  }

  const getAllArtwork = async () => {
    const response = await axios.get('/api/artwork')
    setAllArtwork(response.data)
  }

  useEffect(() => {
    if (!allArtwork) return null
    const userArtworkArray = allArtwork.filter(doodle => {
      return doodle.owner._id === params.id
    })
    setUserArtwork(userArtworkArray)
    console.log('üêù ~ file: Profile.js ~ line 53 ~ userArtwork', userArtwork)

  }, [allArtwork])
  
  if (!user) return null
  if (!userArtwork) return null
  return (
    <>
      <div className="main profile-main">
        <div className="section-header section-header-profile">
          <img src={profile} alt="Profile" className="title-img"></img>
        </div>
        <div className="content-section">
          <div className="box profile-details-wrapper">
            <div className="tile is-vertical">
              <div>
              </div>
              <div>
                <p className="profile-name-text">{user.username}</p>
                <img className="profile-pic-img" src={user.profilePicture}></img>
                { user.bio &&
              <>
                <p className="profile-title-text">Bio:</p>
                <p className="profile-sub-text">{user.bio}</p>
              </> 
                }
                { user.location &&
              <>
                <p className="profile-title-text">Location:</p>
                <p className="profile-sub-text">{user.location}</p>
              </> 
                }
              </div>
              {userIsOwner(user._id) &&
              <Link to={`/profile/${user._id}/profile-form`}>
                <button className="edit-button">
                  <svg className="edit-icon edit-button-fill" viewBox="0 0 401 400" version="1.1">
                    <g id="Page-1" stroke="none" strokeWidth="1" fillRule="evenodd">
                      <g id="Artboard" transform="translate(-1182.000000, -1153.000000)" fillRule="nonzero">
                        <g id="editicon" transform="translate(1182.000000, 1153.000000)">
                          <path d="M370.107237,250.645823 C364.590992,250.645823 360.12026,255.116556 360.12026,260.6328 L360.12026,349.306236 C360.100753,365.847167 346.700259,379.251563 330.159328,379.267168 L49.9348867,379.267168 C33.3939554,379.251563 19.9934602,365.847167 19.9739547,349.306236 L19.9739547,89.0557494 C19.9934602,72.5187191 33.3939554,59.114323 49.9348867,59.0948174 L138.608322,59.0948174 C144.124567,59.0948174 148.595299,54.6240841 148.595299,49.1078401 C148.595299,43.595497 144.124567,39.1208628 138.608322,39.1208628 L49.9348867,39.1208628 C22.3692693,39.1520721 0.0312093042,61.490131 0,89.0557494 L0,349.310137 C0.0312093042,376.875755 22.3692693,399.213814 49.9348867,399.245023 L330.159328,399.245023 C357.724945,399.213814 380.063005,376.875755 380.094214,349.310137 L380.094214,260.6328 C380.094214,255.116556 375.623481,250.645823 370.107237,250.645823 Z" id="Path"></path>
                          <path d="M376.138435,13.4239017 C358.587103,-4.12742998 330.132019,-4.12742998 312.580687,13.4239017 L134.406769,191.597819 C133.185705,192.818883 132.304042,194.332535 131.843705,195.99443 L108.413321,280.583348 C107.449733,284.051482 108.428924,287.765389 110.972484,290.312848 C113.519943,292.856406 117.23385,293.835599 120.701984,292.875912 L205.290902,269.441627 C206.952797,268.981289 208.466448,268.099626 209.687513,266.878562 L387.857528,88.7007433 C405.381553,71.1377079 405.381553,42.7060318 387.857528,25.1429954 L376.138435,13.4239017 Z M156.167457,198.089354 L301.989029,52.2638807 L349.017549,99.2924012 L203.192076,245.117875 L156.167457,198.089354 Z M146.773457,216.939774 L184.345558,254.515776 L132.374264,268.914969 L146.773457,216.939774 Z M373.735318,74.5785332 L363.143661,85.170191 L316.11124,38.1377697 L326.706798,27.5461118 C336.455804,17.7971052 352.263317,17.7971052 362.012324,27.5461118 L373.735318,39.2652055 C383.46872,49.0259159 383.46872,64.8217247 373.735318,74.5785332 L373.735318,74.5785332 Z" id="Shape"></path>
                        </g>
                      </g>
                    </g>
                  </svg>
                </button>
              </Link>
              }
            </div>
          </div>
          <div className="arrow-down-wrapper">
            <svg className="arrow-down-icon" viewBox="0 0 440 259">
              <defs>
                <polygon id="path-1" points="980 1679 1196 1930 764 1930"></polygon>
                <filter x="-1.6%" y="-2.0%" width="103.2%" height="105.6%" filterUnits="objectBoundingBox" id="filter-2">
                  <feOffset dx="0" dy="2" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>
                  <feGaussianBlur stdDeviation="2" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>
                  <feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0" type="matrix" in="shadowBlurOuter1"></feColorMatrix>
                </filter>
              </defs>
              <g id="Page-1" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                <g id="Artboard" transform="translate(-760.000000, -1673.000000)">
                  <g id="Triangle" transform="translate(980.000000, 1804.500000) scale(1, -1) translate(-980.000000, -1804.500000) ">
                    <use fill="black" fillOpacity="1" filter="url(#filter-2)" xlinkHref="#path-1"></use>
                    <use fill="#000000" fillRule="evenodd" xlinkHref="#path-1"></use>
                  </g>
                </g>
              </g>
            </svg>
          </div>
          <div className="section-header bottom">

            <svg className="page-sub-title" viewBox="0 0 831 184" version="1.1">
  
              <g id="Page-1" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                <g id="Artboard" transform="translate(-1209.000000, -666.000000)" fill="#000000" fillRule="nonzero">
                  <g id="doodles-title" transform="translate(1208.000000, 666.000000)">
                    <path d="M29.26,184 C24.21,183.92 19.26,183.84 14.84,180.85 C14.6265878,180.697841 14.3853485,180.589113 14.13,180.53 C4.76,178.9 2.13,171.68 1.91,164.6 C1.63,156.93 1.34,149.25 1.28,141.6 C1.11,117.98 0.8,94.36 1.04,70.75 C1.17,56.95 2.23,43.15 2.93,29.35 C3.04,27.35 3.63,25.35 3.76,23.35 C3.94568726,21.477782 3.89529221,19.5896474 3.61,17.73 C2.69,12.86 6.81,7.56 12.47,6.13 C24.91,2.99 37.21,3.07 49.41,7.25 C50.3935337,7.55918678 51.3955033,7.80633928 52.41,7.99 C71.81,11.71 89.06,20.18 105,31.61 C111.84,36.51 118.9,41.2 123.31,48.61 C130.09,60.01 135.9,71.88 137.06,85.33 C137.93,95.45 135.3,105 131.46,114.33 C127.62,123.66 121.03,131.33 114.75,138.97 C102.56,153.82 87.52,165.39 70.66,174.42 C61.96,179.08 52.77,182.74 42.5,182.66 C38.13,182.72 33.69,183.58 29.26,184 Z M24.61,27.09 C24.77,29.22 24.92,30.77 25.01,32.32 C25.54,41.48 26.17,50.64 26.53,59.81 C26.88,68.61 26.99,77.42 27.12,86.23 C27.21,91.91 27.05,97.59 27.21,103.23 C27.32,107.5 27.97,111.76 28.01,116.03 C28.11,125.83 27.9,135.62 28.01,145.41 C28.01,148.79 28.5,152.16 28.78,155.76 C34.8580979,156.208822 40.9690813,155.723181 46.9,154.32 C57.73,151.51 66.9,145.39 76.28,139.61 C85.87,133.7 94.15,126.86 100.51,117.34 C105.262672,110.432071 107.868411,102.273916 108,93.89 C108.16,86.68 106.33,80.01 103.68,73.32 C101.330643,67.404513 97.6805181,62.0933762 93,57.78 C81.86,47.26 67.65,41.78 54.83,34.06 C53.7285463,33.5246117 52.5569646,33.1475509 51.35,32.94 C45.77,31.5 40.21,29.99 34.59,28.71 C31.42,28 28.21,27.66 24.61,27.09 Z" id="Shape"></path>
                    <path d="M355.87,108.5 C356.25,97.12 356.69,88.99 356.75,80.87 C356.81,72.75 356.34,64.61 356.33,56.48 C356.33,48.79 356.68,41.09 356.75,33.4 C356.75,29.4 356.7,25.4 356.39,21.4 C355.85843,16.3796442 357.405006,11.3605 360.67,7.51 C361.972989,5.99756463 363.684836,4.89337142 365.6,4.33 C370.3,3.11 375.16,2.51 379.9,1.44 C386.36,-0.02 392.8,0.69 399.21,1.5 C409.44,2.77 419.69,3.98 429.84,5.69 C445.44,8.31 457.79,16.13 467.47,28.83 C478.88,43.83 483.76,60.69 484.26,79.13 C484.62,92.05 482.52,104.44 476.68,116.23 C472.73,124.23 466.79,130.34 460.68,136.45 C447,150 430.19,158.1 411.88,163.26 C406.412755,164.785973 400.820788,165.823382 395.17,166.36 C391.43,166.72 387.57,165.78 383.77,165.47 C382.8711,165.301112 381.944661,165.352581 381.07,165.62 C372.25,169.54 364.07,165.57 362.07,156.15 C360.64,149.41 359.13,142.65 358.32,135.83 C357.09,125.68 356.47,115.46 355.87,108.5 Z M380.87,21.45 C381.3,25.07 381.97,28.45 382.05,31.81 C382.4,47.46 382.49,63.11 382.86,78.76 C383.22,93.95 380.72,109.17 383.69,124.32 C384.69,129.32 385.13,134.32 385.99,139.32 C386.12,140.1 387.09,141.32 387.71,141.32 C390.71,141.43 393.89,141.68 396.77,140.98 C402.27,139.64 407.53,137.33 413.03,136.09 C420.73062,134.417567 428.074081,131.394187 434.72,127.16 C439.99,123.76 444.72,119.55 449.64,115.59 C450.741308,114.740513 451.614151,113.630559 452.18,112.36 C461.96,87.62 460.18,64.13 444.77,41.95 C438.83,33.4 431.05,28.08 420.82,26.62 C407.55,24.76 394.28,23.18 380.84,21.45 L380.87,21.45 Z" id="Shape"></path>
                    <path d="M347.46,75.17 C347.345794,91.958699 345.155842,108.668842 340.94,124.92 C338.87646,132.92927 334.816746,140.284923 329.14,146.3 C324.44,151.3 319.45,156.15 314.29,160.73 C307.4,166.85 299.29,169.22 290,168.18 C275.56,166.56 266.75,159.18 262.69,145.09 C258.92,132.01 257.8,118.48 255.53,105.14 C253.542635,92.5227144 252.516351,79.7727186 252.46,67 C252.197326,52.449391 255.424024,38.0475518 261.87,25 C268.81,10.81 279.99,2.61 296.38,3 C300.11,3.09 303.83,3.77 307.56,4.1 C308.401932,4.18150629 309.25152,4.07914619 310.05,3.8 C313.535033,2.40827739 317.477083,2.7805201 320.64,4.8 C326.14,8.25 330.53,12.64 332.84,19.03 C335.57,26.57 338.98,33.86 341.84,41.35 C344.930838,49.0651522 346.812972,57.2109489 347.42,65.5 C347.62,68.69 347.46,71.94 347.46,75.17 Z M321.37,74.76 L320.9,74.66 C320.69,70.74 321.13,66.66 320.15,62.93 C317.15,51.39 313.7,39.93 310.06,28.58 C309.53,26.89 307.2,25.2 305.37,24.65 C302.814947,24.0173071 300.158248,23.9084539 297.56,24.33 C295.56,24.58 293,25.19 291.93,26.58 C288.79,30.68 285.49,34.64 283.81,39.86 C278.24,57.22 280.66,74.67 282.66,92.1 C283.57,100.1 285.26,107.94 286.66,115.84 C287.93,122.84 289.24,129.92 290.72,136.92 C291.61,141.119426 293.17,141.92 297.08,140.42 C302.61,138.33 306.22,134.08 309,129.12 C314.166591,120.269102 317.302141,110.380848 318.18,100.17 C318.87,91.67 320.29,83.23 321.37,74.76 Z" id="Shape"></path>
                    <path d="M155.23,99.74 C155.76,85.57 154.23,71.2 158.03,57.27 C160.89,46.8366667 163.936667,36.4566667 167.17,26.13 C171.04,13.79 180.66,8.45 192.61,7.13 C196.61,6.69 200.28,6.95 203.9,4.58 C206.9,2.63 210.5,3.37 213.76,4.79 C217.74252,6.46633012 221.136426,9.28936328 223.51,12.9 C227.96,19.69 232.26,26.58 236.51,33.51 C240.96,40.81 242.51,49.07 242.8,57.35 C243.39,73.16 243.17,89.02 240.8,104.71 C239.428544,114.740699 237.231077,124.64101 234.23,134.31 C229.9,147.57 220.88,155.65 208.62,160.94 C207.726407,161.290358 206.854816,161.694429 206.01,162.15 C188.55,172.52 172.24,166.51 163.01,150.35 C157.95,141.53 155.77,131.83 155.36,121.77 C155,114.43 155.23,107.08 155.23,99.74 Z M202.74,26.33 C199.49,27.54 196.32,28.53 193.33,29.91 C192.135443,30.5407659 191.239932,31.6196947 190.84,32.91 C188.31,43.91 185.57,54.81 183.65,65.91 C181.12,80.52 181.89,95.35 181.87,110.12 C181.87,117.39 182.87,124.41 185.98,130.99 C187.150392,133.414007 188.658754,135.659715 190.46,137.66 C192.52,139.98 195.2,140.51 196.69,138.97 C199.46,136.12 202.39,133.24 204.4,129.87 C208.62,122.82 210.32,114.87 211.73,106.81 C214.41,91.55 216.98,76.29 215.59,60.73 C215.05,54.73 215.07,48.48 211.91,42.93 C209.23,38.23 206.74,33.42 204.15,28.67 C203.74,27.9 203.26,27.18 202.74,26.33 Z" id="Shape"></path>
                    <path d="M760,179.8 C746.65,179.23 733.77,178.97 721.24,175.65 C714.65,173.91 708.45,171.12 703.89,165.88 C701.703893,163.189519 699.934164,160.186036 698.64,156.97 C697.45,154.24 698.64,151.62 700.81,149.67 C702.98,147.72 705.81,146.99 708.37,148.48 C716.87,153.48 726.37,154.48 735.8,155.63 C750.141886,157.219961 764.588126,157.65803 779,156.94 C795.5,156.29 805.87,143.52 810.18,132.55 C811.43,129.37 810.66,125.31 810.44,121.68 C810.131422,118.64099 809.664118,115.620197 809.04,112.63 C807.6,104.04 802.75,97.83 795.5,93.32 C792.9,91.7 790.19,90.25 787.69,88.5 C774.21,79.08 759.19,73.93 742.98,71.7 C736.831833,70.8485863 730.764526,69.4906334 724.84,67.64 C711.77,63.57 705.95,51.06 710.69,38.17 C713.69,30.04 719.53,24.28 726.13,19.05 C739.3,8.61 754.5,4.32 771.05,4.11 C778.60128,3.8734531 785.876004,6.96246906 790.95,12.56 C793.62,15.42 794.03,18.61 791.95,21.27 C790.97438,22.543988 789.524829,23.3690607 787.931279,23.5574235 C786.33773,23.7457863 784.735762,23.2814132 783.49,22.27 C779.08,19.16 774.23,19.44 769.35,19.9 C754.43,21.28 742.55,28.83 731.94,38.76 C730.596177,40.1376567 729.491071,41.7294138 728.67,43.47 C727.17,46.37 727.8,47.98 730.96,48.65 C738.04,50.16 745.16,51.65 752.31,52.73 C766.106482,54.7773483 779.361227,59.5354621 791.31,66.73 C795.72,69.39 800.04,72.23 804.49,74.83 C818.93,83.25 827.63,95.54 829.95,112.18 C830.95,119.36 832.4,126.53 831.14,133.82 C830.847582,135.805385 830.31015,137.746859 829.54,139.6 C819.11,162.75 802.31,177.31 776.02,178.89 C770.52,179.22 765,179.51 760,179.8 Z" id="Path"></path>
                    <path d="M617.62,98.37 C621.53,115.16 622.31,131.85 621.86,148.94 L625.35,148.94 C636.35,149.1 647.35,149.35 658.42,149.39 C664.89,149.39 671.36,148.89 677.83,148.96 C683.69,149.03 688.67,153.41 689.35,158.56 C690.23,165.24 685.12,171.03 677.96,170.950819 C672.29,170.89 666.63,170.14 660.96,169.87 C652.57,169.46 644.18,168.94 635.78,168.96 C625,168.96 614.6,166.69 604.16,164.53 C600.56,163.78 598.6,160.98 598.47,157.31 C598.364376,156.205697 598.139739,155.116039 597.8,154.06 C597.209019,152.24433 596.744573,150.389888 596.41,148.51 C594.7,130.68 592.95,112.84 591.52,94.99 C590.95,87.99 591.13,80.86 591.02,73.79 C590.89,64.97 590.76,56.15 590.71,47.32 C590.65,35.97 590.46,24.61 590.71,13.25 C590.84,7.35 594.79,3.7 601.09,3.11 C612.57,2.03 624.09,0.95 635.58,0.3 C639.43,0.08 643.35,1.08 647.22,1.62 C652.59,2.37 657.96,3.11 663.28,4.08 C665.947497,4.51116237 668.553074,5.26328762 671.04,6.32 C674.001212,7.52968917 675.681612,10.6762393 675.04,13.81 C674.41,16.81 671.93,18.44 668.22,18.81 C662.13,19.42 656.08,20.48 649.98,20.9 C642.41,21.41 634.8,21.52 627.21,21.69 C622.15,21.8 617.09,21.69 612.4,21.69 C613.81,41.35 615.18,60.45 616.59,80.08 L634.14,77.38 C636.38,77.03 638.61,76.26 640.83,76.31 C647.001272,76.3693465 651.99416,81.3489088 652.07,87.52 C652.169524,90.6285542 651.019811,93.6474597 648.877699,95.9023145 C646.735587,98.1571693 643.77957,99.4600852 640.67,99.52 C635,99.64 629.32,99.08 623.67,98.8 C621.86,98.7 620.06,98.54 617.62,98.37 Z" id="Path"></path>
                    <path d="M529.05,144.93 C537.83,145.56 546.71,146.15 555.59,146.84 C561.17,147.27 566.75,147.72 572.3,148.41 C577.17,149.01 580.51,152.56 580.61,156.76 C580.71,160.96 577.61,164.76 572.93,165.76 C570.87304,166.14149 568.773476,166.239066 566.69,166.05 C562.15,165.71 557.69,165.05 553.11,164.7 C546.93,164.26 540.67,164.43 534.54,163.58 C527.21,162.58 519.95,160.89 512.74,159.19 C509.223355,158.361201 506.441642,155.675409 505.49,152.19 C504.252975,147.928892 503.323913,143.584358 502.71,139.19 C501.21,128.9 499.66,118.61 498.71,108.26 C497.53,95.56 496.98,82.8 496.08,70.07 C495.58,63.09 494.996667,56.1233333 494.33,49.17 C493.110631,37.1393554 494.034949,24.9877896 497.06,13.28 C497.83,10.34 499.96,7.52 502.06,5.2 C503.524378,3.55280463 505.746077,2.79543912 507.91166,3.2051995 C510.077244,3.61495987 511.868655,5.13166499 512.63,7.2 C513.951851,10.7960545 514.864275,14.5296093 515.35,18.33 C518.35,39.52 521.62,60.69 524.13,81.94 C526.23,99.64 527.48,117.44 529,135.2 C529.28,138.45 529.05,141.69 529.05,144.93 Z" id="Path"></path>
                  </g>
                </g>
              </g>
            </svg>
          </div>

          <div className="box profile-doodle-wrapper columns is-multiline">
     
            {userArtwork.length > 0 ?
              <>
                {/* {userArtwork.map(art => (
                      <ArtCard key={art._id} id={id} {...art} cardFlip={false}/>
                    ))} */}
                {userArtwork.map((artwork) => {
                  const decompressedDoodleData = LZString.decompressFromEncodedURIComponent(artwork.doodleData)
                  return (
                    <Link key={artwork.id} to={`/gallery/${artwork.id}`}>
                      <div  className='my-box box hover-box'>
                        <p style={{ fontSize: 30 }}>{artwork.title}</p>
                        <CanvasDraw
                          className="canvas doodle-canvas column"     
                          disabled
                          hideGrid
                          immediateLoading={true}
                          //saveData={doodleData}
                          saveData={decompressedDoodleData}
                          backgroundColor={JSON.parse(decompressedDoodleData).backgroundColor} 
                        />
                      </div>
                    </Link>
                  )
                })}
                    
              </>
              :
              <p>No doodles yet... <Link to="/doodle-new" className="no-doodles-text">create new</Link></p>
            }
          </div>
        </div>
      </div>
    </>
  )
}



export default Profile